syntax= "proto3";

package admin_casts_service;
import "admin_casts_service_v1_messages.proto";
option go_package = "admin_casts_service/v1/protos";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    schemes: HTTP;
    //schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";

    info: {
        title: "Admin panel for casts service";
        version: "1.0";
        contact: {
            name: "Falokut";
            url: "https://github.com/Falokut";
            email: "timur.sinelnik@yandex.ru";
        };
    }
    responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					ref: "#/definitions/rpcStatus";
				}
			}
		}
	}
    responses: {
		key: "500";
		value: {
			description: "Something went wrong.";
			schema: {
				json_schema: {
					ref: "#/definitions/rpcStatus";
				}
			}
		}
	}
};

service castsServiceV1 {
  rpc GetCast(GetCastRequest)returns(Cast){
    option (google.api.http) = {
      get: "/v1/cast/{movie_id}"
    };
  }

  rpc SearchCastByLabel(SearchCastByLabelRequest)returns(CastsLabels){
    option (google.api.http) = {
      get: "/v1/cast/search"
    };
  }

  rpc GetCasts(GetCastsRequest) returns(Casts) {
    option (google.api.http) = {
      get: "/v1/cast"
    };
  }

  rpc CreateCast(CreateCastRequest)returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/cast"
      body: "*"
    };
  }

  rpc UpdateLabelForCast(UpdateLabelForCastRequest)returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/cast/label"
      body: "*"
    };
  }

  rpc AddPersonsToTheCast(AddPersonsToTheCastRequest)returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/cast/persons"
      body: "*"
    };
  }

  rpc RemovePersonsFromTheCast(RemovePersonsFromTheCastRequest)returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/cast/persons/delete"
      body: "*"
    };
  }

  rpc DeleteCast(DeleteCastRequest)returns(google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/v1/cast/{movie_id}"
    };
  }

  rpc GetProfessions(google.protobuf.Empty) returns(Professions) {
		option (google.api.http) = {
			get:"/v1/cast/professions"
		};
	}
  
  rpc CreateProfession(CreateProfessionRequest) returns(CreateProfessionResponse) {
    option (google.api.http) = {
			post:"/v1/cast/professions"
      body:"*"
		};
  }
  
  rpc UpdateProfession(UpdateProfessionRequest) returns(google.protobuf.Empty) {
    option (google.api.http) = {
			post:"/v1/cast/professions/update"
      body:"*"
		};
  }

  rpc DeleteProfession(DeleteProfessionRequest) returns(google.protobuf.Empty) {
    option (google.api.http) = {
			delete:"/v1/cast/professions"
		};
  }
}